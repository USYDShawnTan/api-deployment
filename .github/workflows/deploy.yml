name: Deploy to Vercel

on:
  repository_dispatch:
    types: [frontend-updated, backend-updated]
  workflow_dispatch:
    inputs:
      deploy_type:
        description: "Type of deployment"
        required: true
        default: "full"
        type: choice
        options:
          - full
          - frontend-only
          - backend-only

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - name: Clone frontend repository
        run: |
          git clone https://${{ secrets.PAT_TOKEN }}@github.com/${{ secrets.FRONTEND_REPO }} frontend
        if: github.event.action == 'frontend-updated' || github.event.inputs.deploy_type == 'full' || github.event.inputs.deploy_type == 'frontend-only'

      - name: Clone backend repository
        run: |
          git clone https://${{ secrets.PAT_TOKEN }}@github.com/${{ secrets.BACKEND_REPO }} backend
        if: github.event.action == 'backend-updated' || github.event.inputs.deploy_type == 'full' || github.event.inputs.deploy_type == 'backend-only'

      - name: Install frontend dependencies
        working-directory: frontend
        run: |
          pnpm install
        if: github.event.action == 'frontend-updated' || github.event.inputs.deploy_type == 'full' || github.event.inputs.deploy_type == 'frontend-only'

      - name: Build frontend
        working-directory: frontend
        run: |
          pnpm run build
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
        if: github.event.action == 'frontend-updated' || github.event.inputs.deploy_type == 'full' || github.event.inputs.deploy_type == 'frontend-only'

      - name: Move frontend build to deployment directory
        run: |
          mkdir -p public
          cp -r frontend/build/* public/
        if: github.event.action == 'frontend-updated' || github.event.inputs.deploy_type == 'full' || github.event.inputs.deploy_type == 'frontend-only'

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
        if: github.event.action == 'backend-updated' || github.event.inputs.deploy_type == 'full' || github.event.inputs.deploy_type == 'backend-only'

      - name: Copy backend files to api directory
        run: |
          mkdir -p api
          cp -r backend/* api/
        if: github.event.action == 'backend-updated' || github.event.inputs.deploy_type == 'full' || github.event.inputs.deploy_type == 'backend-only'

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Deploy to Vercel
        run: |
          vercel --token ${{ secrets.VERCEL_TOKEN }} --env MONGODB_URI="${{ secrets.MONGODB_URI }}" --env MONGODB_DB_NAME="${{ secrets.MONGODB_DB_NAME }}" --env API_ACCESS_PASSWORD="${{ secrets.API_ACCESS_PASSWORD }}" --yes --prod
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
