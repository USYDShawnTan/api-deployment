name: Deploy to Vercel

on:
  repository_dispatch:
    types: [frontend-update, backend-update]
  workflow_dispatch:
    inputs:
      deploy_type:
        description: "手动触发部署类型"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - frontend
          - backend

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 获取前端代码
      - name: Checkout Frontend Repository
        uses: actions/checkout@v3
        if: github.event.action == 'frontend-update' || github.event.inputs.deploy_type == 'frontend' || github.event.inputs.deploy_type == 'all' || github.event.action == null
        with:
          repository: USYDShawnTan/api-frontend
          token: ${{ secrets.PAT_TOKEN }}
          path: frontend

      # 获取后端代码
      - name: Checkout Backend Repository
        uses: actions/checkout@v3
        if: github.event.action == 'backend-update' || github.event.inputs.deploy_type == 'backend' || github.event.inputs.deploy_type == 'all' || github.event.action == null
        with:
          repository: USYDShawnTan/api-backend
          token: ${{ secrets.PAT_TOKEN }}
          path: backend

      # 设置部署结构
      - name: Set up deployment structure
        run: |
          # 创建部署目录结构
          mkdir -p api

          # 将前端文件复制到根目录
          if [ -d "frontend" ]; then
            cp -r frontend/* ./
            rm -rf frontend
          fi

          # 将后端文件复制到 /api 目录下
          if [ -d "backend" ]; then
            cp -r backend/* api/
            rm -rf backend
          fi

          # 确保部署目录存在所有必要文件
          ls -la
          ls -la api/

      # 安装 Vercel CLI
      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      # 部署到 Vercel
      - name: Deploy to Vercel
        run: |
          vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --yes
