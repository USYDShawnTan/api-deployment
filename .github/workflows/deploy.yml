name: Deploy to Vercel

on:
  push:
    branches:
      - main
  workflow_dispatch: # 允许手动触发
  repository_dispatch:
    types: [frontend-update, backend-update] # 响应前端和后端仓库的更新

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 为前端设置Node.js环境
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # 为后端设置Python环境
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # 克隆前端仓库
      - name: Clone Frontend Repository
        run: |
          git clone https://${{ secrets.PAT_TOKEN }}@github.com/USYDShawnTan/api-frontend.git frontend-repo

      # 构建前端
      - name: Build Frontend
        run: |
          cd frontend-repo
          npm install
          npm run build

      # 克隆后端仓库
      - name: Clone Backend Repository
        run: |
          git clone https://${{ secrets.PAT_TOKEN }}@github.com/USYDShawnTan/api-backend.git backend-repo

      # 设置整合后的部署结构
      - name: Setup Deployment Structure
        run: |
          # 创建静态文件目录
          mkdir -p backend-repo/app/static
          mkdir -p backend-repo/app/static/static

          # 复制前端构建的静态文件
          cp -r frontend-repo/build/* backend-repo/app/static/

          # 修改index.py以支持静态文件和SPA路由
          grep -q "from fastapi.staticfiles import StaticFiles" backend-repo/app/index.py || echo "from fastapi.staticfiles import StaticFiles" >> backend-repo/app/index.py
          grep -q "from fastapi.responses import FileResponse" backend-repo/app/index.py || echo "from fastapi.responses import FileResponse" >> backend-repo/app/index.py
          grep -q "import os" backend-repo/app/index.py || echo "import os" >> backend-repo/app/index.py

          # 添加静态文件挂载
          grep -q "app.mount(\"/static\", StaticFiles(directory=\"static/static\"), name=\"static\")" backend-repo/app/index.py || echo "app.mount(\"/static\", StaticFiles(directory=\"static/static\"), name=\"static\")" >> backend-repo/app/index.py

          # 添加根路径处理
          grep -q "@app.get(\"/\")" backend-repo/app/index.py || echo -e "\n@app.get(\"/\")\nasync def serve_frontend():\n    index_path = os.path.join(\"static\", \"index.html\")\n    return FileResponse(index_path, media_type=\"text/html\")" >> backend-repo/app/index.py

          # 添加通配符路由支持SPA
          grep -q "@app.get(\"/{full_path:path}\")" backend-repo/app/index.py || echo -e "\n@app.get(\"/{full_path:path}\")\nasync def catch_all(full_path: str):\n    if full_path.startswith(\"api/\"):\n        raise HTTPException(status_code=404, detail=\"API route not found\")\n    index_path = os.path.join(\"static\", \"index.html\")\n    return FileResponse(index_path, media_type=\"text/html\")" >> backend-repo/app/index.py

          # 添加HTTPException导入
          grep -q "from fastapi import FastAPI, HTTPException" backend-repo/app/index.py || sed -i 's/from fastapi import FastAPI/from fastapi import FastAPI, HTTPException/g' backend-repo/app/index.py

          # 备份原始requirements.txt
          cp backend-repo/requirements.txt backend-repo/requirements.original.txt

          # 创建新的requirements.txt确保兼容性
          echo 'fastapi==0.95.2' > backend-repo/requirements.txt
          echo 'uvicorn==0.22.0' >> backend-repo/requirements.txt
          echo 'pydantic==1.10.8' >> backend-repo/requirements.txt
          echo 'python-dotenv==1.0.0' >> backend-repo/requirements.txt
          echo 'typing-extensions==4.6.3' >> backend-repo/requirements.txt
          echo 'starlette==0.27.0' >> backend-repo/requirements.txt

      # 安装Vercel CLI
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # 部署到Vercel
      - name: Deploy to Vercel
        run: |
          cd backend-repo
          vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
