name: Deploy to Vercel

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [frontend-updated, backend-updated]
  workflow_dispatch:
    inputs:
      trigger:
        description: "手动触发部署"
        required: false
        default: "手动触发部署"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Deployment Repository
        uses: actions/checkout@v3
        with:
          path: deployment

      - name: Checkout Frontend Repository
        uses: actions/checkout@v3
        with:
          repository: USYDShawnTan/api-frontend
          token: ${{ secrets.PAT_TOKEN }}
          path: frontend

      - name: Log Deployment Details
        run: |
          echo "Deployment triggered by: ${{ github.event_name }}"
          echo "Repository: ${{ github.event.client_payload.repository || 'manual' }}"
          echo "Commit SHA: ${{ github.event.client_payload.sha || github.sha }}"
          date

      - name: Setup Project Structure
        run: |
          mkdir -p merged-project
          mkdir -p merged-project/frontend
          # 复制前端文件
          cp -r frontend/* merged-project/frontend/
          # 复制Vercel配置和入口文件
          cp deployment/vercel.json merged-project/
          cp deployment/index.py merged-project/

          # 添加requirements.txt文件
          cat > merged-project/requirements.txt << EOF
          fastapi>=0.95.0
          uvicorn>=0.21.1
          python-dotenv>=1.0.0
          pydantic>=2.0.0
          starlette>=0.27.0
          EOF

          # 阻止生成__pycache__目录
          export PYTHONDONTWRITEBYTECODE=1

          # 调试输出
          echo "最终部署文件结构:"
          ls -la merged-project/
          echo "入口文件内容:"
          cat merged-project/index.py | head -20

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel with Environment Variables
        run: |
          cd merged-project
          vercel deploy --token ${{ secrets.VERCEL_TOKEN }} --prod --yes \
          -e API_ACCESS_PASSWORD="${{ secrets.API_ACCESS_PASSWORD }}" \
          -e NODE_ENV="production" \
          -e PYTHONDONTWRITEBYTECODE="1"

      - name: Handle Deployment Failure
        if: failure()
        run: |
          echo "Deployment failed. See logs for details."
          echo "查看错误日志:"
          find . -name "*.log" -type f -exec cat {} \;

      - name: Deployment Success Notification
        if: success()
        run: echo "Deployment successful. Updated from ${{ github.event.client_payload.repository || 'manual trigger' }}"
